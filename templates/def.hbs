{{#> tlfi_layout }}

{{#if word}}

{{#if defs.length}}
<div class="cnrtlLink-wrapper">
  <a class="external cnrtlLink" href="{{cnrtlLink}}" target="_blank" rel="noopener noreferrer">
    Voir sur le CNRTL {{{inlineSVG "imgs/icon-external-link.svg"}}}
  </a>
</div>
{{/if}}

<div class="resultHeader-stickyDetector"></div>
<div class="resultHeader" data-count={{{defs.length}}}>
  <nav class="homographs">
    {{#each defs}}
    <a class="homograph" href="#section-{{@index}}">
      <span class="wordForm">{{{this.homograph.wordForm}}}</span>
      <span class="wordClass">{{{this.homograph.wordClass}}}</span>
    </a>
    {{/each}}
  </nav>
</div>

{{#if defs.length}}
<article>
  {{#each defs}}
  <section class="def" id="section-{{@index}}">{{{this.def}}}</section>
  {{/each}}
</article>
{{else}}
<div class="errorMsg">
  <p>Ce mot n'a pas été trouvé dans le TLFi.</p>
</div>
{{/if}}

<a id="backToTop" aria-label="Retour en haut de page" href="#top"></a>

<script>
  const rootElement = document.documentElement;
  const backToTop = document.getElementById('backToTop');
  document.addEventListener("scroll", function () {
    backToTop.classList.toggle('visible', rootElement.scrollTop > (rootElement.clientHeight / 2));
  });

  const observer = new IntersectionObserver(entries => {
    if (entries[0].intersectionRatio === 0) {
      document.querySelector('.resultHeader').classList.add('sticked');
    } else if (entries[0].intersectionRatio === 1) {
      document.querySelector('.resultHeader').classList.remove('sticked');
    }
  }, { threshold: [0, 1] });

  observer.observe(document.querySelector('.resultHeader-stickyDetector'));
</script>
{{else}}
<p>
</p>
{{/if}}

{{/tlfi_layout }}